@model Curso // Declara el tipo de modelo que esperas recibir (en este caso, Curso)
@{
    ViewData["Title"] = "Curso de " + Model.Nombre; // Usar el nombre del curso para el título
}

<!-- CSS personalizado -->
<style>
    .course-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        max-width: 800px;
        width: 100%;
    }

    .course-header {
        padding: 2rem;
        background: white;
    }

    .course-title {
        font-size: 2rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 1rem;
    }

    .course-description {
        color: #666;
        line-height: 1.6;
        margin-bottom: 2rem;
    }

    .course-image {
        width: 150px;
        height: 150px;
        background: #2c3e50;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
    }

    .dotnet-logo {
        color: #ffffff;
        font-size: 3rem;
    }

    .topic-item {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        padding: 1rem;
        margin-bottom: 0.5rem;
        border-radius: 5px;
        color: #495057;
        font-weight: 500;
    }

    .course-info {
        background: #f8f9fa;
        padding: 1.5rem;
        border-top: 1px solid #e9ecef;
    }

    .info-item {
        margin-bottom: 0.5rem;
        color: #666;
    }

    .topic-item {
        margin-bottom: 1rem;
        cursor: pointer;
        font-size: 1.1rem;
        color: #333;
    }

    .topic-item:hover {
        color: #20b269;
    }

    /* Estilos para el contenedor del video */
    .video-container {
        margin-top: 10px;
        padding: 5px;
        background-color: #f8f9fa;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .video-container video {
        width: 100%;
        border-radius: 5px;
    }
</style>

<div class="hero-section bg-success vh-100 ">
    <div class="container d-flex justify-content-center align-items-center h-100">
        <div class="course-card">
            <div class="course-header">
                <div class="row">
                    <div class="col-md-8">
                        <h1 class="course-title">@Model.Nombre</h1> <!-- Usamos el nombre del curso -->
                        <p class="course-description">
                            @Model.Descripcion
                        </p>

                        <!-- Lista de temas -->
                        <div class="topics-list">
                            @foreach (var capitulo in Model.Capitulos)
                            {
                                <div class="topic-item" onclick="toggleVideo('@capitulo.Id')">
                                    <span class="topic-title">@capitulo.Titulo</span>
                                </div>
                            }
                        </div>

                    </div>

                    <div class="col-md-4 text-center">
                        <div class="course-image mx-auto">
                            <img src="@Model.Imagen" alt="Imagen del curso" class="img-fluid rounded-1"
                                style="width: 150px; height: 150px; object-fit: cover;">
                        </div>

                        <div class="course-info">

                            <div class="mt-4">
                                <button class="btn btn-success btn-block w-100 fw-bold" onclick="subscribeToCourse()">
                                    SUSCRIBIRSE
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script>
    function toggleVideo(temaId) {
        var videoContainer = document.getElementById('video-container-' + temaId);

        // Alternar visibilidad
        if (videoContainer.style.display === 'none') {
            videoContainer.style.display = 'block';
        } else {
            videoContainer.style.display = 'none';
        }
    }
    function subscribeToCourse() {
        // Aquí puedes agregar la lógica para la suscripción
        // Ejemplo simple con SweetAlert (si lo tienes incluido)
        if (typeof Swal !== 'undefined') {
            Swal.fire({
                title: '¡Excelente!',
                text: 'Te has suscrito al curso de ' + '@Model.Nombre',
                icon: 'success',
                confirmButtonText: 'Continuar'
            });
        } else {
            // Fallback con alert nativo
            alert('¡Te has suscrito al curso de ' + '@Model.Nombre' + '!');
        }

        // O redirigir a una página de checkout
        // window.location.href = '@Url.Action("Checkout", "Course")';
    }
    function GetYouTubeVideoId(url) {
        var videoId = url.split('v=')[1];
        if (videoId.indexOf('&') !== -1) {
            videoId = videoId.split('&')[0];
        }
        return videoId;
    }
</script>

<!-- Font Awesome para iconos (agregar en el layout si no está incluido) -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">